name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write # required for uploading releases

env:
  DEFAULT_GO_VERSION: ^1.17
  DEFAULT_PY_VERSION: "3.9"
  GITHUB_USERNAME: ${{ secrets.EC2_BOT_GITHUB_USERNAME }}
  GITHUB_TOKEN: ${{ secrets.EC2_BOT_GITHUB_TOKEN }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.DEFAULT_GO_VERSION }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Validate Release Version
        run: make validate-release-version

      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build Artifacts
        run: make build-release-assets

      - name: Upload Artifacts to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/bin/*
            build/k8s-resources/${{ env.RELEASE_VERSION }}/individual-resources.tar
            build/k8s-resources/${{ env.RELEASE_VERSION }}/all-resources.yaml
            build/k8s-resources/${{ env.RELEASE_VERSION }}/helm-chart-archives/*

      - name: Release Docker Linux
        run: make release-docker-linux
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  releaseWindows:
    name: Release Windows
    runs-on: windows-2019
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.DEFAULT_GO_VERSION }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Release Windows Docker Image
        run: make release-docker-windows
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  postRelease:
    name: Post Release
    runs-on: ubuntu-20.04
    needs: [release, releaseWindows]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.DEFAULT_GO_VERSION }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Sync to Homebrew
        run: make homebrew-sync
      
      - name: Sync to aws/eks-charts
        run: make ekscharts-sync-release


  helmLint:
    name: Helm Lint Test
    runs-on: ubuntu-20.04
    needs: [release, releaseWindows]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.DEFAULT_GO_VERSION }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Helm Lint Test
        run: make validate-release-version