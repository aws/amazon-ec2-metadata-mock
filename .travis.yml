---
language: minimal

services:
- docker

stages:
- Build and Tests
- name: Validate Versions for Release
  if: type = push AND tag =~ /^v\d+\.\d+(\.\d+)?(-\S*)?$/
- name: Github Release
  if: type = push AND tag =~ /^v\d+\.\d+(\.\d+)?(-\S*)?$/ AND env(GITHUB_TOKEN) IS present
- name: Docker Release Linux
  if: type = push AND tag =~ /^v\d+\.\d+(\.\d+)?(-\S*)?$/ AND env(DOCKERHUB_TOKEN) IS present
- name: Docker Release Windows
  if: type = push AND tag =~ /^v\d+\.\d+(\.\d+)?(-\S*)?$/ AND env(DOCKERHUB_TOKEN) IS present
- name: Homebrew Sync
  if: type = push AND tag =~ /^v\d+\.\d+(\.\d+)?(-\S*)?$/ AND env(GITHUB_TOKEN) IS present
- name: Helm Chart Lint Test
  if: type = push AND tag =~ /^v\d+\.\d+(\.\d+)?(-\S*)?$/
- name: Helm Chart and Docker Image E2E Tests
  # Skip running this stage when updating release versions as part of release prep
  # as the new Docker image wouldn't be available yet and previous commits should have already been tested.
  # Since the release prep commit will be the release commit, always run this stage when a new tag is pushed, as part of a release.
  if: commit_message !~ /(Skip Helm E2E Tests)/ OR (type = push AND tag =~ /^v\d+\.\d+(\.\d+)?(-\S*)?$/)

jobs:
  include:
    # scripts run for every build
    - stage: Build and Tests
      name: Build
      language: go
      go: 1.15.x
      script: make build
    - name: Unit tests
      language: go
      go: 1.15.x
      script: make unit-test
    - name: Go report card test
      script: make go-report-card-test
    - name: Readme length validator
      script: make validate-readme
    - name: License test
      if: type = push AND env(GITHUB_TOKEN) IS present
      script: make license-test
    - name: AEMM E2E tests
      language: go
      go: 1.15.x
      script: make e2e-test
    - name: AEMM Mock IP Count test
      script: make helm-mock-ip-count-test
    - name: Build Github release assets
      script: make build-release-assets
    - name: Build Docker images Linux
      script: make build-docker-images-linux
    - name: Build Docker images Windows
      os: windows
      install: choco install make
      script: RefreshEnv.cmd && make build-docker-images-windows
    - name: Spellcheck Markdown Files
      script: make spellcheck
    - name: Check Shell Scripts
      script: make shellcheck

    # stages run on tag creation only
    - stage: Validate Versions for Release
      name: Validate AEMM and Chart versions
      script: make validate-release-version
    - stage: Github Release
      name: Github release
      script: make release-github
    - stage: Docker Release Linux
      name: Docker Release Linux
      script: make release-docker-linux

    # stages run after asset uploads
    - stage: Homebrew Sync
      name: Sync to Homebrew aws-tap
      script: make homebrew-sync
    - stage: Docker Release Windows
      name: Docker Release Windows
      os: windows
      install: choco install make
      script: RefreshEnv.cmd && make release-docker-windows

    # Helm E2E tests, to test Helm chart installation on latest Docker image and a local Docker image with unreleased commits, if any.
    # In the case of a new release, this stage runs after docker release in order to test the newly released Docker image.
    - stage: Helm Chart and Docker Image E2E Tests
      name: Helm Lint Test
      if: type = push AND tag =~ /^v\d+\.\d+(\.\d+)?(-\S*)?$/
      script: make helm-lint-test
    - name: Helm chart / Docker Image Tests for K8s v1.18
      script: test/helm/chart-test.sh -i -k $K8S_VERSION
      env: K8S_VERSION=1.18
    - name: Helm chart / Docker Image Tests for K8s v1.17
      script: test/helm/chart-test.sh -i -k $K8S_VERSION
      env: K8S_VERSION=1.17
    - name: Helm chart / Docker Image Tests for K8s v1.16
      script: test/helm/chart-test.sh -i -k $K8S_VERSION
      env: K8S_VERSION=1.16
    - name: Helm chart / Docker Image Tests for K8s v1.15
      script: test/helm/chart-test.sh -i -k $K8S_VERSION
      env: K8S_VERSION=1.15
    - name: Helm chart / Docker Image Tests for K8s v1.14
      script: test/helm/chart-test.sh -i -k $K8S_VERSION
      env: K8S_VERSION=1.14
    - name: Helm chart / Docker Image Tests for K8s v1.13
      script: test/helm/chart-test.sh -i -k $K8S_VERSION
      env: K8S_VERSION=1.13
    - name: Helm chart / Docker Image Tests for K8s v1.12
      script: test/helm/chart-test.sh -i -k $K8S_VERSION
      env: K8S_VERSION=1.12
